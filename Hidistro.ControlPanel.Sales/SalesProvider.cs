using Hidistro.Core;
using Hidistro.Core.Entities;
using Hidistro.Core.Enums;
using Hidistro.Entities.Promotions;
using Hidistro.Entities.Sales;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
namespace Hidistro.ControlPanel.Sales
{
	public abstract class SalesProvider
	{
		private static readonly SalesProvider _defaultInstance;
		static SalesProvider()
		{
			SalesProvider._defaultInstance = (DataProviders.CreateInstance("Hidistro.ControlPanel.Data.SalesData,Hidistro.ControlPanel.Data") as SalesProvider);
		}
		public static SalesProvider Instance()
		{
			return SalesProvider._defaultInstance;
		}
		public abstract bool AddShipper(ShippersInfo shipper);
		public abstract bool UpdateShipper(ShippersInfo shipper);
		public abstract bool DeleteShipper(int shipperId);
		public abstract ShippersInfo GetShipper(int shipperId);
		public abstract IList<ShippersInfo> GetShippers(bool includeDistributor);
		public abstract void SetDefalutShipper(int shipperId);
		public abstract bool AddExpressTemplate(string expressName, string xmlFile);
		public abstract bool UpdateExpressTemplate(int expressId, string expressName);
		public abstract bool SetExpressIsUse(int expressId);
		public abstract bool DeleteExpressTemplate(int expressId);
		public abstract System.Data.DataTable GetExpressTemplates();
		public abstract System.Data.DataTable GetIsUserExpressTemplates();
		public abstract PaymentModeActionStatus CreateUpdateDeletePaymentMode(PaymentModeInfo paymentMode, DataProviderAction action);
		public abstract void SwapPaymentModeSequence(int modeId, int replaceModeId, int displaySequence, int replaceDisplaySequence);
		public abstract PaymentModeInfo GetPaymentMode(int modeId);
		public abstract PaymentModeInfo GetPaymentMode(string gateway);
		public abstract IList<PaymentModeInfo> GetPaymentModes();
		public abstract IList<ShippingModeInfo> GetShippingModes(string paymentGateway);
		public abstract void SwapShippingModeSequence(int modeId, int replaceModeId, int displaySequence, int replaceDisplaySequence);
		public abstract bool CreateShippingMode(ShippingModeInfo shippingMode);
		public abstract bool DeleteShippingMode(int modeId);
		public abstract bool UpdateShippingMode(ShippingModeInfo shippingMode);
		public abstract ShippingModeInfo GetShippingMode(int modeId, bool includeDetail);
		public abstract bool CreateShippingTemplate(ShippingModeInfo shippingMode);
		public abstract bool UpdateShippingTemplate(ShippingModeInfo shippingMode);
		public abstract bool DeleteShippingTemplate(int templateId);
		public abstract DbQueryResult GetShippingTemplates(Pagination pagin);
		public abstract System.Data.DataTable GetShippingAllTemplates();
		public abstract ShippingModeInfo GetShippingTemplate(int templateId, bool includeDetail);
		public abstract IList<string> GetExpressCompanysByMode(int modeId);
		public abstract System.Data.DataTable GetProductSales(SaleStatisticsQuery productSale, out int totalProductSales);
		public abstract System.Data.DataTable GetProductSalesNoPage(SaleStatisticsQuery productSale, out int totalProductSales);
		public abstract IList<UserStatisticsInfo> GetUserStatistics(Pagination page, out int totalProductSaleVisits);
		public abstract OrderStatisticsInfo GetUserOrders(UserOrderQuery userOrder);
		public abstract OrderStatisticsInfo GetUserOrdersNoPage(UserOrderQuery userOrder);
		public abstract AdminStatisticsInfo GetStatistics();
		public abstract IList<OrderPriceStatisticsForChartInfo> GetOrderPriceStatisticsOfSevenDays(int days);
		public abstract System.Data.DataTable GetMemberStatistics(SaleStatisticsQuery query, out int totalProductSales);
		public abstract System.Data.DataTable GetMemberStatisticsNoPage(SaleStatisticsQuery query);
		public abstract System.Data.DataTable GetProductVisitAndBuyStatistics(SaleStatisticsQuery query, out int totalProductSales);
		public abstract System.Data.DataTable GetProductVisitAndBuyStatisticsNoPage(SaleStatisticsQuery query, out int totalProductSales);
		public abstract DbQueryResult GetSaleOrderLineItemsStatistics(SaleStatisticsQuery query);
		public abstract DbQueryResult GetSaleOrderLineItemsStatisticsNoPage(SaleStatisticsQuery query);
		public abstract DbQueryResult GetSaleTargets();
		public abstract System.Data.DataTable GetWeekSaleTota(SaleStatisticsType saleStatisticsType);
		public abstract System.Data.DataTable GetDaySaleTotal(int year, int month, SaleStatisticsType saleStatisticsType);
		public abstract decimal GetDaySaleTotal(int year, int month, int int_0, SaleStatisticsType saleStatisticsType);
		public abstract decimal GetMonthSaleTotal(int year, int month, SaleStatisticsType saleStatisticsType);
		public abstract System.Data.DataTable GetMonthSaleTotal(int year, SaleStatisticsType saleStatisticsType);
		public abstract decimal GetYearSaleTotal(int year, SaleStatisticsType saleStatisticsType);
		public abstract IList<UserStatisticsForDate> GetUserAdd(int? year, int? month, int? days);
		public abstract decimal GetAddUserTotal(int year);
		public abstract OrderInfo GetOrderInfo(string orderId);
		public abstract IList<LineItemInfo> GetLineItemInfo(string orderId);
		public abstract DbQueryResult GetOrders(OrderQuery query);
		public abstract System.Data.DataTable GetSendGoodsOrders(string orderIds);
		public abstract System.Data.DataTable GetRecentlyOrders(out int number);
		public abstract int DeleteOrders(string orderIds);
		public abstract int ConfirmPay(OrderInfo order);
		public abstract bool ConfirmOrderFinish(OrderInfo order);
		public abstract int SendGoods(OrderInfo order);
		public abstract bool UpdateOrderAmount(OrderInfo order, System.Data.Common.DbTransaction dbTran);
		public abstract void UpdatePayOrderStock(string orderId);
		public abstract bool UpdateRefundOrderStock(string orderId);
		public abstract bool CloseTransaction(OrderInfo order);
		public abstract bool UpdateOrderShippingMode(OrderInfo order);
		public abstract bool UpdateOrderPaymentType(OrderInfo order);
		public abstract bool SaveOrderRemark(OrderInfo order);
		public abstract bool SaveShippingAddress(OrderInfo order);
		public abstract bool SetOrderShippingMode(string purchaseOrderIds, int realShippingModeId, string realModeName);
		public abstract bool SetOrderExpressComputerpe(string purchaseOrderIds, string expressCompanyName, string expressCompanyAbb);
		public abstract bool EditOrderShipNumber(string orderId, string shipNumber);
		public abstract bool DeleteLineItem(string skuId, string orderId, System.Data.Common.DbTransaction dbTran);
		public abstract int GetSkuStock(string skuId);
		public abstract LineItemInfo GetLineItemInfo(string skuId, string orderId);
		public abstract bool UpdateLineItem(string orderId, LineItemInfo lineItem, System.Data.Common.DbTransaction dbTran);
		public abstract DbQueryResult GetOrderGifts(OrderGiftQuery query);
		public abstract DbQueryResult GetGifts(GiftQuery query);
		public abstract bool ClearOrderGifts(string orderId, System.Data.Common.DbTransaction dbTran);
		public abstract bool AddOrderGift(string orderId, OrderGiftInfo gift, int quantity, System.Data.Common.DbTransaction dbTran);
		public abstract IList<GiftInfo> GetGiftList(GiftQuery query);
		public abstract bool DeleteOrderGift(string orderId, int giftId, System.Data.Common.DbTransaction dbTran);
		public abstract OrderGiftInfo GetOrderGift(int giftId, string orderId);
		public abstract DbQueryResult GetPurchaseOrders(PurchaseOrderQuery query);
		public abstract System.Data.DataTable GetSendGoodsPurchaseOrders(string purchaseOrderIds);
		public abstract System.Data.DataTable GetRecentlyPurchaseOrders(out int number);
		public abstract PurchaseOrderInfo GetPurchaseOrder(string purchaseOrderId);
		public abstract int DeletePurchaseOrders(string purchaseOrderIds);
		public abstract bool ClosePurchaseOrder(PurchaseOrderInfo purchaseOrder);
		public abstract bool UpdatePurchaseOrderShippingMode(PurchaseOrderInfo purchaseOrder);
		public abstract bool SavePurchaseOrderShippingAddress(PurchaseOrderInfo purchaseOrder);
		public abstract bool SavePurchaseOrderRemark(PurchaseOrderInfo purchaseOrder);
		public abstract bool SendPurchaseOrderGoods(PurchaseOrderInfo purchaseOrder);
		public abstract bool ConfirmPurchaseOrderFinish(PurchaseOrderInfo purchaseOrder);
		public abstract void UpdateRefundSubmitPurchaseOrderStock(PurchaseOrderInfo purchaseOrder);
		public abstract void UpdateUserStatistics(int userId, decimal refundAmount, bool isAllRefund);
		public abstract bool UpdatePurchaseOrderAmount(PurchaseOrderInfo purchaseOrder);
		public abstract void UpdateProductStock(string purchaseOrderId);
		public abstract void UpdateDistributorAccount(decimal expenditure, int distributorId);
		public abstract bool ConfirmPayPurchaseOrder(PurchaseOrderInfo purchaseOrder);
		public abstract bool AddPurchaseOrderItem(PurchaseShoppingCartItemInfo item, string POrderId);
		public abstract bool UpdatePurchaseOrderQuantity(string POrderId, string SkuId, int Quantity);
		public abstract bool DeletePurchaseOrderItem(string POrderId, string skuId);
		public abstract int GetCurrentPOrderItemQuantity(string POrderId, string skuId);
		public abstract bool UpdatePurchaseOrder(PurchaseOrderInfo purchaseOrder);
		public abstract bool SetPurchaseOrderShippingMode(string orderIds, int realShippingModeId, string realModeName);
		public abstract bool SetPurchaseOrderExpressComputerpe(string purchaseOrderIds, string expressCompanyName, string expressCompanyAbb);
		public abstract bool SetPurchaseOrderShipNumber(string purchaseOrderId, string shipNumber);
		public abstract bool EditPurchaseOrderShipNumber(string purchaseOrderId, string orderId, string shipNumber);
		public abstract bool AddMemberPoint(UserPointInfo point);
		public abstract int GetHistoryPoint(int userId);
		public abstract bool UpdateUserAccount(decimal orderTotal, int userId);
		public abstract bool UpdateProductSaleCounts(Dictionary<string, LineItemInfo> lineItems);
		public abstract bool ChangeMemberGrade(int userId, int gradId, int points);
		public abstract System.Data.DataSet GetPurchaseOrdersAndLines(string purchaseOrderIds);
		public abstract System.Data.DataSet GetTradeOrders(OrderQuery query, out int records);
		public abstract System.Data.DataSet GetTradeOrders(string orderId);
		public abstract System.Data.DataSet GetAPIPurchaseOrders(PurchaseOrderQuery query, out int totalrecord);
		public abstract ShippingModeInfo GetShippingModeByCompany(string companyname);
		public abstract bool SetOrderPrinted(string orderIds, bool isPrinted);
		public abstract bool SetPurchaseOrderPrinted(string purchaseOrderIds, bool isPrinted);
		public abstract System.Data.DataSet GetOrdersAndLines(string orderIds);
		public abstract System.Data.DataSet GetOrderGoods(string orderIds);
		public abstract System.Data.DataSet GetProductGoods(string orderIds);
		public abstract System.Data.DataSet GetPurchaseOrderGoods(string purchaseorderIds);
		public abstract System.Data.DataSet GetPurchaseProductGoods(string purchaseorderIds);
		public abstract bool CheckRefund(string orderId, string Operator, string adminRemark, int refundType, bool accept);
		public abstract void GetRefundType(string orderId, out int refundType, out string remark);
		public abstract bool CheckReturn(string orderId, string Operator, decimal refundMoney, string adminRemark, int refundType, bool accept);
		public abstract void GetRefundTypeFromReturn(string orderId, out int refundType, out string remark);
		public abstract bool CheckReplace(string orderId, string adminRemark, bool accept);
		public abstract string GetReplaceComments(string orderId);
		public abstract DbQueryResult GetRefundApplys(RefundApplyQuery query);
		public abstract bool DelRefundApply(int refundId);
		public abstract DbQueryResult GetReturnsApplys(ReturnsApplyQuery query);
		public abstract bool DelReturnsApply(int returnsId);
		public abstract DbQueryResult GetReplaceApplys(ReplaceApplyQuery query);
		public abstract bool DelReplaceApply(int replaceId);
		public abstract bool SaveDebitNote(DebitNote note);
		public abstract DbQueryResult GetAllDebitNote(DebitNoteQuery query);
		public abstract bool DelDebitNote(string noteId);
		public abstract bool SaveSendNote(SendNote note);
		public abstract DbQueryResult GetAllSendNote(RefundApplyQuery query);
		public abstract bool DelSendNote(string noteId);
		public abstract bool CheckPurchaseRefund(string purchaseOrderId, string Operator, string adminRemark, int refundType, bool accept);
		public abstract void GetPurchaseRefundType(string purchaseOrderId, out int refundType, out string remark);
		public abstract bool CheckPurchaseReturn(string purchaseOrderId, string Operator, decimal refundMoney, string adminRemark, int refundType, bool accept);
		public abstract void GetPurchaseRefundTypeFromReturn(string purchaseOrderId, out int refundType, out string remark);
		public abstract bool CheckPurchaseReplace(string purchaseOrderId, string adminRemark, bool accept);
		public abstract string GetPurchaseReplaceComments(string purchaseOrderId);
		public abstract DbQueryResult GetPurchaseRefundApplys(RefundApplyQuery query);
		public abstract bool DelPurchaseRefundApply(int refundId);
		public abstract DbQueryResult GetPurchaseReturnsApplys(ReturnsApplyQuery query);
		public abstract bool DelPurchaseReturnsApply(int returnId);
		public abstract DbQueryResult GetPurchaseReplaceApplys(ReplaceApplyQuery query);
		public abstract bool DelPurchaseReplaceApply(int replaceId);
		public abstract bool SavePurchaseDebitNote(PurchaseDebitNote note);
		public abstract DbQueryResult GetAllPurchaseDebitNote(DebitNoteQuery query);
		public abstract bool DelPurchaseDebitNote(string noteId);
		public abstract bool SavePurchaseSendNote(SendNote note);
		public abstract DbQueryResult GetAllPurchaseSendNote(RefundApplyQuery query);
		public abstract bool DelPurchaseSendNote(string noteId);
	}
}
